/*
 * Hola Mundo Dtic
 *
 * Esto es un Hola Mundo
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@dtic.org
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;

using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class DefaultApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>GET Hola Mundo</remarks>
        /// <param name="nombreHolaMundo">nombre Hola Mundo</param>
        /// <response code="200">Hola Mundo Correcto</response>
        /// <response code="400">Hola Mundo Error</response>
        [HttpGet]
        [Route("/SIG4/HolaMundo/1.0.0/holamundo")]
        [ValidateModelState]
        [SwaggerOperation("HolamundoGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse200), description: "Hola Mundo Correcto")]
        [SwaggerResponse(statusCode: 400, type: typeof(InlineResponse400), description: "Hola Mundo Error")]
        public virtual IActionResult HolamundoGet([FromQuery][Required()]string nombreHolaMundo)
        {
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse200));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(InlineResponse400));
            /*          string exampleJson = null;
                      exampleJson = "{\n  \"contador\" : 0,\n  \"nombre\" : \"nombre\"\n}";

                                  var example = exampleJson != null
                                  ? JsonConvert.DeserializeObject<InlineResponse200>(exampleJson)
                                  : default(InlineResponse200);            //TODO: Change the data returned
            */
            string salidaJson = null;
            salidaJson = "{\n  \"contador\" : 1,\n  \"nombre\" : \""+nombreHolaMundo+"\"\n}";
            var salida = salidaJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse200>(salidaJson)
                        : default(InlineResponse200);

            return new ObjectResult(salida);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>POST Hola Mundo</remarks>
        /// <param name="nombreHolaMundo">nombre Hola Mundo</param>
        /// <response code="200">Hola Mundo POSTCorrecto</response>
        /// <response code="400">Hola Mundo Error</response>
        [HttpPut]
        [Route("/SIG4/HolaMundo/1.0.0/holamundo")]
        [ValidateModelState]
        [SwaggerOperation("HolamundoPut")]
        [SwaggerResponse(statusCode: 400, type: typeof(InlineResponse400), description: "Hola Mundo Error")]
        public virtual IActionResult HolamundoPut([FromQuery][Required()]string nombreHolaMundo)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(InlineResponse400));

            throw new NotImplementedException();
        }
    }
}
